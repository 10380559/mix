<?php

namespace apps\crontab\commands;

use mix\console\ExitCode;
use mix\coroutine\PDO;
use mix\facades\Input;
use mix\facades\Output;
use Swoole\Coroutine\Channel;

/**
 * 协程范例
 * @author 刘健 <coder.liu@qq.com>
 */
class CoroutineCommand extends BaseCommand
{

    // 初始化事件
    public function onInitialize()
    {
        parent::onInitialize(); // TODO: Change the autogenerated stub
        // 获取程序名称
        $this->programName = Input::getCommandName();
        // 设置pidfile
        $this->pidFile = "/var/run/{$this->programName}.pid";
    }

    // 执行任务
    public function actionExec()
    {
        // 预处理
        parent::actionExec();
        // 执行
        $this->exec();
        // 返回退出码
        return ExitCode::OK;
    }

    // 执行
    public function exec()
    {
        // 并行查询数据
        tgo(function () {
            $time = time();

            $chan  = $this->foo();
            $chan2 = $this->foo2();
            var_dump($chan->pop());
            var_dump($chan2->pop());

            // 输出 time: 2，说明两次查询是并行执行的
            Output::writeln('time: ' . (time() - $time));
        });
    }

    // 查询数据
    public function foo()
    {
        $chan = new Channel();
        tgo(function () use ($chan) {
            $pdo    = PDO::newInstanceByConfig('pdo');
            $result = $pdo->createCommand('select sleep(2)')->queryAll();
            $chan->push($result);
        });
        return $chan;
    }

    // 查询数据
    public function foo2()
    {
        $chan = new Channel();
        tgo(function () use ($chan) {
            $pdo    = PDO::newInstanceByConfig('pdo');
            $result = $pdo->createCommand('select sleep(1)')->queryAll();
            $chan->push($result);
        });
        return $chan;
    }

}
